###############################################################################
补充

1.meta: flush_handlers
  表示立即执行前面已经完成的task对应的hander，而不是等所有tasks执行完后，才执行handers

2.后导入的变量优先级更高
  所有-e导入的变量的优先级更高

3.ansible-doc -s 模块名	//s:snippet，显示该模块的参数及解释

###############################################################################
facts

在使用 Ansible 对远程主机执行任何一个 playbook 之前，总会先通过 setup 模块获取 facts，
并暂存在内存中，直至该 playbook 执行结束

有时候又需要使用 facts 中的内容，这时候可以设置 facts 的缓存，在需要的时候直接读取缓存进行引用

Ansible 的配置文件中可以修改 gathering 的值为 smart、implicit 或者 explicit。
  smart 表示默认收集 facts，但 facts 已有的情况下不会收集，即使用缓存 facts；
  implicit 表示默认收集 facts，要禁止收集，必须使用 gather_facts: False；
  explicit 则表示默认不收集，要显式收集，必须使用 gather_facts: Ture

Ansible 支持两种 facts 缓存：redis 和 jsonfile

###############################################################################
roles

1.基本概念
  一个角色，有自己的tasks,handlers等

2.角色的目录结构（下面的目录不是必须的）

  角色名/
  ├── files/			//存放由copy或script模块等调用的文件
  │      
  ├── templates/			//存放模板文件的目录
  │
  ├── vars/			//存放变量的目录，至少包含一个main.yml
  │
  ├── tasks/			//至少包含一个main.yml，其他文件需要在此文件中用include包含
  │      └── main.yml   
  │		
  ├── handlers/			//至少包含一个main.yml   
  │		
  ├── meta/			//定义当前角色的特殊设定及其依赖关系,至少包含一个main.yml
  │
  └── default/			//设定默认变量时使用此目录中的main.yml文件

3.roles的搜索路径在ansible.cfg中定义：
  如：roles_path = roles:/opt/dire/purist/ansible:/opt/dire/kolla-ansible/ansible/roles:.
#在此路径下搜索相应的路径

4.playbook调用角色的三种方法

（1）直接调用：
  - hosts: websrvs
    remote_user: root
    roles:
      - mysql
      - memcached
      - nginx

（2）传递变量给role：
  - hosts: 
    remote_user:
    roles:
      - { role: nginx, username: nginx } 		//role用于指定角色名称；后续的k/v用于传递变量给角色

（3）基于条件实现role调用：
    roles:
      - { role: nginx, when: "ansible_distribution_major_version == '7' " }

###############################################################################
ansible-glaxy命令（提供别人写好的role的网站）

ansible-glaxy list			//列出存在的角色，搜索路径在ansible.cfg中定义了
ansible-glaxy install 角色名		//从网站获得角色，安装在~/.ansible/roles/目录下
ansible-glaxy remove 角色名

###############################################################################