###############################################################################

1.查看容器与真机绑定的端口号
  docker port xx		//xx为容器ip

2.查看容器使用的外部存储
  docker inspect xx		//查看   "Mounts":  这一项 

3.启动容器时利用 --net=xx 指定使用的网络模式

###############################################################################
docker四种网络模式

1.bridge模式
  有一个虚拟交换机dokcer0，所有的容器都与docker0相连，通过docker0路由出去

2.host模式
  如果启动容器使用host模式，那么该容器不会获得一个独立的Network Namespace，而是和宿主机共有一个
  容器不会虚拟出自己的网卡，配置自己的ip等，而是使用宿舍机的ip和端口，其他的如文件系统还是隔离的

3.container模式
  这个模式指定新创建的容器和已经存在的一个容器共享一个 Network Namespace

4.none模式
  使用none模式，Docker容器拥有自己的Network Namespace，但是，并不为Docker容器进行任何网络配置。
  也就是说，这个Docker容器没有网卡、IP、路由等信息。需要我们自己为Docker容器添加网卡、配置IP等

5.overlay模式
  可以实现容器的跨主机通信，host模式也可以
  原理：需要创建一个consul的服务容器，提供ip地址池，比如10.0.9.0/24之类的
            容器的从consul获取ip
            获取完了后，会通过eth1进行通信

###############################################################################