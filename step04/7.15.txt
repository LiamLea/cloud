###############################################################################
JSON

主要存在2种数据结构:数组和键值对,并且能够相互嵌套
语法规则:大括号   保存的是键值对,如:{key1:value1,key2:value2,...}
         中括号   保存的是数组
如:
{
  讲师:[
    {姓名:xx,爱好:xx}
    {姓名:xx,爱好:xx}
  ]
}

###############################################################################
YAML

数据结构通过空格为展示(不能使用tab)
语法规则:": "      表示键值对,如:key1: value1
                                 key2: value2
                                 ...
         支持流式模板:
         {key1: value1,key2: value2,...}

         "- "      表示数组(一个"-"号代表数组中的一个元素,对齐的"-"代表在同一个数组中)

         同一层级的缩进必须对齐

         文件开头以"---"开始


如:
讲师:                     讲师:     
  -                         - 姓名: xx
    姓名:xx       或          爱好: xx
    爱好:xx                 - 姓名: xx
  -                           爱好: xxx
    姓名:xx
    爱好:xx

###############################################################################
Jinjia2模板

语法规则:{{表达式或变量名}}
         {%控制语句%}
         {#注释#}

{% if xx %}
  ...
{% elif xx %}
  ...
{% else %}
  ...
{% endif %}

###############################################################################
playbook

是ansible用于配置,部署和管理托管主机的剧本
按照顺序执行,执行过程中发生错误,下面的就不再执行

playbook构成:
  hosts     //主机集合
  vars      //定义需要使用的变量
  tasks     //命令集合
  handlers  //task执行完成后需要调用的任务

playbook由YAML编写,使用ansible-playbook运行,输出JSON格式的内容

基本格式:
---
- hosts: xx
  remote_user: xx
  tasks: 
    - name: 描述信息
      模块1: xx
        参数1: xx
        参数2: xx
        ...
    - name: 描述信息
      模块2: xx
        参数1: xx
        参数2: xx
        ...
    ...

###############################################################################
playbook进阶

1.变量的使用:
  变量名: xxx
//使用:  "{{变量名}}"

2.利用过滤器给密码加密:
  user:
    name: xx
    password: "{{'xxx' | password_hash('sha512')}}"

3.外部变量
  ansible-playbook xx.yml -e 'JSON语句'
或ansible-playbook xx.yml -e @xx.yml       //可以设置参数组,如:user.name,user.group

4.错误处理
  - 模块: 
      参数1: xx
      ...
    ignore_errors: True    //忽略错误继续执行,默认为False,不忽略错误

5.打标签
  - 模块: 
      参数1: xx
      ...
    tags: 标签名
#ansible-playbook xx.yml -t 标签名    //执行指定标签的模块

6.触发器
  tasks: 
    - 模块1: xx
      notify: 描述信息    //当模块1执行成功,会触发指定描述信息的触发器
    - 模块2: xx
      ...
  handlers:
    - name: 描述信息
      模块: xx
      ...

7.根据前一个模块的执行结果进行相应的操作:register,when
   - 模块1: 
       ...
     register: 对象名                   //生成一个对象才保存该模块的执行结果
   - 模块2:
       ...
     when: 对象名.stdout|float > 0.7    //满足这个条件,则执行此模块

8.循环,通过{{item}}获取每次迭代的值
   - user: 
       name: {{item.name}}
       group: {{item.group}}
       password: {{{{item.pwd}} | password_hash('sha512')}}
     with_items:              
       - 值或者参数组           
       - ...
       ...

#############################################################################
