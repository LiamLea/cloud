###############################################################################
基础概念

1.容器有两个维度的资源限制
  spec.resources.requests		//需求，最低保障
  spec.resources.limits			//限制，硬限制
  
2.cpu单位
  1cpu代表1个虚拟cpu，即1个核心
  1 cpu == 1000m cpu	//m是千分之一的意思
						//500m cpu 就相当于 0.5 个cpu
						
3.内存单位
  k（或K）	-- 		10^3 = 1000
  Ki		--		2^10 = 1024
  
  m（或M）	--		10^6 = 1000000
  Mi		--		2^20 = 1024*1024
  
#i：binary

4.qos class（服务质量类型）

#通过kubectl describe pods xx查看

（1）guaranteed（高优先级）
  该pod内每个容器都设置了requests和limits，并且：
  内存的requests == 内存的limits
  cpu的requests == 内存的limits

（2）burstable（中优先级）

（3）besteffort（低优先级）
  该pod内没有一个容器设置requests和limits
  
#当资源不够用时，先杀死优先级的pod

###############################################################################
指标

1.两类指标

核心指标：由metrics-server采集，包括cpu、内存、磁盘等使用率
非核心指标（自定义指标）：由第三方组件采集，采集指标的范围更广

###############################################################################
安装metrics-server

1.下载yaml文件
  github -> kubernetes -> cluster -> addons -> metrics-server
  
2.修改metrics-server-deployment.yaml
  修改kubelet-port端口，设置为实际的端口（ss -tulnp | grep kubelet）
  
3.修改resource-reader.yaml
  在rules.resources下添加一项：
  - nodes/stats
  
4.安装metrics-server
  kubectl apply -f .

5.验证
  kubectl api-version		//会有metrics相关的项
  kubectl top nodes
  kubectl top pods

###############################################################################
设置自定义指标

1.安装prometheus

2.安装kube-state-metrics		//用于将采集都的指标转换为k8s能够识别的格式

3.安装k8s-prometheus-adapter	//用于将自定义的指标整合为一个api服务，供k8s集群使用

###############################################################################
HPA（horizontal pod autoscaler）控制器

能够根据某些指标对在statefulSet、replicaSet等集合中的pod数量进行动态伸缩
HPA目前支持四种类型的指标，分别是Resource、Object、External、Pods
其中在稳定版本autoscaling/v1中只支持对CPU指标的动态伸缩

kubectl autoscale TYPE NAME --min=xx --max=xx --cpu-percent=xx

#--cpu-percent用于设置每个pod的cpu利用不超过此处，如果超过了会自动添加pod

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: xx
spec:
  scaleTargetRef:
    apiVersion: apps/v1
	kind: xx							//比如：Deployment
	name: xx
  minReplicas: xx
  maxReplicas: xx
  targetCPUUtilizationPercentage: xx
	
###############################################################################