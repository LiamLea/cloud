###############################################################################
单词补充
  anonymous 匿名
  autonomous 自治的,自主的

###############################################################################
命令补充
  
  sed 主要用于非交互式修改文本
  awk 主要用于统计文本的相关内容

  tac 文件名    //cat命令倒过来,将行倒过来(从最后一行输出到第一行)
  rev 文件名    //将每一行的内容倒过来(从行末输出到行首)
                //这两个结合;起来,可以完全颠倒文件内容

  单引号和双引号区别:
    单引号去除shell中符号的特殊含义
    双引号去除shell中大部分符号的特殊含义

  [xx]和[[xx]]区别
    单中括号会对单词进行分离,双中括号不会    //如a="hello world",[ $a == "hello world" ],a会被分离位hello和world,所以用双中括号
    双括号可以使用扩展字符                  //如[ xx ]&&[ yy ],[[ xx && yy ]]

  echo -n 内容   //not output trailing newline不输出最好的换行符(默认会输出换行符)

  column  //格式化命令
          //-t,table 使每一列对齐

  sort   //根据第1个字段进行排序
         //n:numeric
         //r:reverse

  数组定义: 数组名=(数据1 数据2 ...) 
            数组名[下标]=数值      //这里下表要为数字,awk数组下表可以任意
  数组的使用:${a[i]}   //${a[@]},代表整个数组,可以利用for进行遍历

###############################################################################
awk

awk [选项] 'BEGIN{}[条件]{命令序列}...END{}' 文件   //BEGIN和END如果没有命令就可以不用写出来
                                                    //BEGIN{}预处理,不需要要数据源,可以用来进行算术运算

选项:
  -F符号      //指定分隔符,默认是空格或Tab
  -v 变量名=外部变量   //获得外部变量

内置变量(可直接使用):
  FS         //default separator
  NF         //number of frames,NF表示字段数.所以$NF表示最后一个字段
  NR         //number of rows
  $n         //第n个字段,0代表整行

条件(用&&,||连接多个条件):
  $n          //以字段为条件
  NR          //以行号为条件
/正则表达式/  
$n~/正则表达式/   //以某个字段内的正则表达式为条件,!~表不匹配
数值比较      //如:== != > < >= <=

awk扩展--在命令中使用
if语句:   if(条件){命令}else if(){}else{}
数组:     数组名[单元名]=数值
for语句:  for(循环控制){命令}    //如:for(i in a){print a[i]} ,a为数组名,i遍历单元名

###############################################################################
