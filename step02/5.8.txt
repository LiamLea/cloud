###############################################################################
命令补充
  ctrl+d    end of file,结束输入(可用于退出远程登录,退出邮件内容的输入)
  ctrl+s    冻结当前终端(但是输入依然生效,只是屏幕没反应)
  ctrl+q    解冻当前终端
  查看当前的shell:echo $0   //$0表示当前程序名
  stty   //set tty,stty -echo 不显示输入内容
                   stty echo  恢复显示

  '' 界定范围,屏蔽$的作用
  "" 界定范围  //所以优先使用双引号
  `` 相当于$(),取得命令的输出结果

###############################################################################
主流的shell:
  /bin/bash     //使用的最多,优势:支持tab,快捷键,历史命令,别名,管道,重定向...
  /bin/shell
  /bin/tcsh     //能够兼容c语言
  /bin/csh
  /sbin/nologin

脚本编写:
  声明所用解释器
  脚本功能描述,变量含义 ,使用位置,作者等信息
  编写执行指令

脚本执行方法:
  添加x权限(./文件名 执行)   //为什么不能直接输入文件名,因为系统会认为该命令是系统命令
  bash 文件名           //新开一个shell执行,脚本最后有没有exit都没影响,默认执行完毕会关闭新开的shell
  source 文件名         /在当前shell执行,若脚本最后有exit,就会执行,并退出当前终端

###############################################################################
变量

系统变量:
  环境变量:PS1(一级提示符)  PS2(二级提示符) 
    //PS:prompt Symbol,PS1表示shell提示信息[root@server0 /],PS2表示换行输入的提示信息>
  预定义变量:$0 $$ $? $# $*
  位置变量

局部变量:仅当前shell可以使用
全局变量:当前shell及其子shell都可以使用(通过export声明)

set查看所有变量,env查看所有环境变量
unset 变量名  //取消某个变量

###############################################################################
shell中的运算

方法一:
  expr 值1 + 值2   //其他运算:+,-,\*,/,%  
                   //转换为变量:echo `expr 1 + 1`

方法二:
  echo $[值1+值2]         //其他运算:+.-,*,\.%
或echo $((值1+值2))       //若其中的值为变量,不需要用$,如echo $[a+b]

方法三:
  let a++
  let a+=10
  let b=a+c

小数的运算:bc  //arbitrary precision calculator
  echo "1.1+0.1" | bc
  echo "scale=3;1.1+0.1" | bc

###############################################################################
