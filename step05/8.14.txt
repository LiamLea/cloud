###############################################################################
邮件（email模块和smtplib模块）

from email.mime.text import MIMEText
from email.header import Header 
import smtplib

一.准备邮件

message=MIMEText('正文\r\n','plain','utf8')  //plain表示纯文本(在mime中定义的)
message['From']=Header('发件人','utf8')
message['To']=Header('收件人','utf8')
message['Subject']=Header('主题')

二.本地发送邮件

smtp=smtplib.SMTP('127.0.0.1')
smtp.sendmail('发件人',['收件人1'],message.ad_bytes())

三.网络发送邮件

smtp=smtplib.SMTP()
smtp.connect(server)        //与邮件服务器建立连接（如：smtp.126.com)
#smtp.starttls()            //如果服务器要求安全连接，加这一句
smtp.login(sender,passwd)   //sender为发件人的地址，passwd为授权码，不是登录密码
smtp.sendmail(sender,receivers,message.as_bytes())

###############################################################################
json模块

JSON(javaScript Object Notation),是一种轻量级的数据交换格式
可以通过网络传输各种类型的数据
采用完全独立于语言的文本格式，实现语言之间的数据交换

json.dumps(adict)    //将字典类型，转换为json格式(即字符串）
json.loads(astr)     //将json格式的数据转换为特定类型

应用：获取网上的数据，例如获得天气情况：
from urllib import request
url='http://www.weather.com.cn/data/sk/101010100.html'
html=request.urlopen(url)
data=html.read()
json.loads(data)

###############################################################################
requests模块

requests是一个HTTP库，内部采用urllib3实现
提供了使用某种方法(如：GET,POST)访问web的函数

1.获取url资源,以str类型返回数据
  reponse=requests.get(url)
  reponse.text

2.获取url资源，以bytes类型返回数据（如图片等）
  reponse=requests.get(url)
  reponse.content

3.获取url资源，解析json格式，返回特定类型
  reponse=requests.get(url)
  reponse.encoding='utf8'  //注意url资源的编码，通过html.encoding可以查看现在的编码
  reponse.json()           //将json格式转换为特定的数据类型

###############################################################################
requests+json的框架(调用其他软件提供的api,如：钉钉机器人，图灵机器人，zabbix)

import requests
import json

url='xx'
headers={'xx':'yy'}   //根据软件的手册写

data='...'

reponse=requests.post(url,headers=headers,data=json.dumps(data))
print(reponse.json())

###############################################################################
zabbix使用脚本报警

一.首先创建脚本：/usr/local/share/zabbix/alertscripts/xx
#脚本要接收传递的参数
#传递什么参数由zabbix进行配置

二.添加媒介(media types)
  create media type -> Name:xx -> type:Script -> Script name:绝对路径
  -> Script parameters:{ALERT.MESSAGE}   
#可以添加多个，脚本参数：
#     {ALERT.MESSAGE}   //报警信息的内容
#     {ALERT.SENDTO}    //接收方
#     {ALERT.SUBJECT}   //主题
#添加的顺序，就是传递给脚本位置参数的顺序

三.将报警媒介与用户关联

四.创建触发器（triger)
  {host:key.func()}表达式
#设置关于cpu负载的触发，不要选择last函数，没有意义，应该选择avg函数，如avg(1m)

五.创建Action
#与相关触发器关联
#并在operations选项中设置发送消息给指定用户

###############################################################################
