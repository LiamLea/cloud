###############################################################################
补充

1.source   //在当前进程执行
  bash     //会fork一个子进程执行,使用bash解释器
  ./       //会fork一个子进程执行,使用声明的解释器

2. ~/.ssh/kown_hosts  里面存放的是对端传过来的公钥

###############################################################################
多进程编程

解决效率问题
windows系统不知道多进程,只支持多线程
每个进程都有自己独立的运行环境

一.进程的生命周期

  --> parent process ----------------------> parent process
            |                                     .
            |fork()                               |
            .                                     |
      child process ---> child process ---> zomble process
                   exec()              exit()

二.多进程执行

1.for i in range(3):
    retval=os.fork()
    if retval==0:
      print('hello')

#打印7个hello

2.for i in range(3):
    retval=os.fork()
    if retval=0:
      print('hello')
      exit()

#打印3个hello,注意两者的区别

三.僵尸进程
1.产生原因:
  子进程的程序运行结束,就会变为僵尸进程
2.处理:
  父进程可以用wait等待子进程结束  
#waitpid可以等待指定进程,也可以不阻塞,若有则处理,若没有则继续执行,之后出现了也不处理
#父进程结束后,如果还存在僵尸进程,就交给init处理
  或者杀死僵尸进程的父进程(不推荐,因为这样程序就终止了)

###############################################################################
多线程编程(threading模块)

  t=threading.Thread(target=函数名,args=(参数1,)) 
  t.start()
#如果一个参数,不加括号,则会把字符串转换为元组,即每一个字符是一个元素,就会出错
#target=MyClass(),也可以传递一个实例,这个实例有可调用方法(__call__)

###############################################################################
urllib模块

1.包含4个子模块
  request     //用于发送request和获取request的结果
  error       //包含了request时产生的异常,用于忽略错误,能够完成爬虫
  parse       //用来解析和处理url
  robots.txt  //用来解析页面的robots.txt文件

2.获取指定url内容(from urllib import request)
  html=request.urlopen(url)
  data=html.read()      //返回一个字符串,包含所有的内容,readlines返回一个列表
                        //当内容多时,每次读取4096,要保存的话就写入本地即可

3.忽略HTTPError异常(from urllib import error)
  try:
    ...
  except error.HTTPError:
    pass

4.模拟客户端(因为某些网站会拒绝相应的客户端)
  header={'USER-Agent':'xx'}
  robj=request.Request(url,headers=header)  //建立请求对象
  html=request.urlopen(r)
  data=html.read()

5.url只允许一部分ascii字符,如果有其他字符需要编码

  url='http://www.sougou,com/web?query=中国'
  request.urlopen(url)  //出错
  
正确的是:

  url='http://www.sougou/web?query='+request.quote('中国')
  request.urlopen(url)

###############################################################################
wget模块

1.下载
  wget.download(url,out='/tmp/aa')

###############################################################################
paramiko模块  //实现ssh功能

1.使用
  ssh=paramiko.SSHClient()                //创建SSHClient实例
  ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy()  //接收秘钥,无需询问
  ssh.connect(ip/host,username='xx',password='xx',port=xx)
  result=ssh.exec_command(命令)   //返回一个元组:输入,输出和错误信息的生成器对象
  out=result[1].read().decode()
  err=result[2].read().decode()
  ssh.close()

###############################################################################
