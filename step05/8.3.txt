###############################################################################
shutil模块   //实现复制,移动等操作

1.copy(src,dst)    //src必须为文件,dst可以为目录

2.copy2(src,dst)   //相当于:cp -p

3.copytree(src,dst)   //相当于:cp -r

4.move(src,dst)

5.rmtree(src)  //只能删除目录

6.chown(src,owner='xx',group='xx')

###############################################################################
subprocess模块  //用于执行系统命令

1.run(command,shell=True)  //在shell下执行command命令

2.result=run(command,shell=True)
  result.returncode     //returncode就是$?

3.result=run(command,shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE)  
#不显示命令的输出结果,将所有输出信息都放入返回值中
  result.returncode   
  result.stdout
  result.stderr

###############################################################################
bytes和str的转换

1.str类型的表示方式:   'xx'
2.bytes类型的表示方式: b'xx'
3.bytes类型的数据,一个字节正好能表示成一个ASCII字符,所以就显示成字符
  而一个汉字需要占3个字节,一个字节用16进制表示形如:\xaa
4.str转换成bytes:
    b.encode()
5.bytes转换成string:
    str.decode()

###############################################################################
变量赋值

1.多元赋值
  a,b=1,2   //a=1,b=2
  a,b='12'  //a='1',b='2'
  a,b=[1,2] //a=1,b=2
  a,b=(1,2) //a=1,b=2

2.变量交换
  a,b=b,a   //a,b交换数值

###############################################################################
python模块布局

#!/usr/local/bin/python    

"""描述信息
xxx"""

import xx

global_var=xx

class xx:

def func():

if __name__=='__main__'
  程序主体

###############################################################################
编程思路

1.思考程序的运行方式(交互?非交互?),运行场景

2.思考程序有哪些功能,将这些功能写为函数(不写函数的具体内容)

3.编写程序主机

4.编写函数

###############################################################################
序列对象(list,tuple,string)

1.相互转换:
  list(str)
  list(tuple)
  str([10,20,30])   //转换为:'[10,20,30]'  

2.翻转:
  obj[::-1]

3.排序:
  sorted(obj)

###############################################################################
字符串

#因为字符串是不可变的,所以对字符串的改变,都是以返回值的形式

1.格式化
  '%s' %str
  '%d' %digit
  '%s,%s' %(str1,str2)
  '%10s' %str    //宽度为10,左对齐
  '%-10s' %str   //宽度为10,右对齐

2.原始字符串
  str='c:\tmp\new'   //会进行转义
解决:
  str='c:\\tmp\\new'
或者利用原始字符串
  str=r'c:\tmp\new'

3.字符串函数
  str.center(10)        //居中,总宽度为10
  str.center(10,'*')	//居中,总宽度为10,用*补全
  str.ljust(10)		//居左
  str.rjust(10)		//居右
  str.upper()
  str.lower()
  str.strip()           //去除两端的空白字符
  str.lstrip()		//去除左端的空白字符
  str.rstrip()
  str.startswith('xx')  //如果以xx开头,返回True
  str.endswith('xx')	//如果以xx结尾,返回True

###############################################################################
