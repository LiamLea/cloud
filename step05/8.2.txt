###############################################################################
命令补充

1.tomcat启动后,访问慢 的解决方法:
  mv /dev/random /dev/random.bak
  cp /dev/urandom /dev/random
  重启tomcat

2.用ll和du查看文件大小的区别
  ll   		//显示文件的真实大小
  du -sh	//显示文件所占用的空间(一个块的大小为4k,所以所占用的空间为4k的倍数

###############################################################################
文件对象(打开 -> 读写 -> 关闭)

注意 文件指针的移动

1.读取文本文件
  f=open('xx')
  data=f.read()
#data=f.readline()   //读取一行
#data=f.readlines()  //读取所有行放入列表
  f.close()

2.以bytes方式读取文件  //用于处理非文本文件,如可执行程序
  f=open('xx','rb')
  data=f.read(4096)    //括号填字节数,一个块为4096字节,所以一般一次读取4096字节
  f.close()

3.写文本文件
  f=open('xx','w')   //w模式,清空或创建文件
  f.write('xx')
  f.close()

4.with语句   //适用于对资源访问的场合,无论是否异常退出,都会执行必要的清理操作
  with open('xx') as fobj1,open('yy') as fobj2:
    ... 

5.移动文件指针(当打开文件后才会有 文件指针)
  f.tell()   //当前文件指针所在的位置
  f.seek(-2,2)   //第一个参数是偏移量
                 //第二个参数是相对位置,0表示开头,1表示当前位置,2表示结尾

###############################################################################
函数

1.函数的定义
  def 函数名():
    ...

2.位置参数
  import sys
  sys.argv   //返回一个列表,包含位置参数
  sys.argv[0]  //返回程序名  
  ...

3.默认参数
  
###############################################################################
模块

1.一个以.py结尾的python程序就是一个模块(模块名去除.py即可)

2.编写一个模块
"""模块名
描述信息
"""
...
def xx():
  "函数描述信息"
  ...
...

3.使用一个模块(该模块必须在当前目录下)
  import xx
  help(xx)
  xx.function()
  xx.variable

4.导入模块中的某些功能
  from xx import function1,function2,...

5.导入模块时起别名
  import xx as yy

###############################################################################
