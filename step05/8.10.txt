###############################################################################
python软件包管理

python的官方模块文件站点:pypi.org

1.pip install 模块名

2.设置使用国内的镜像站点
  mkdir -p ~/.pip
  vim ~/.php/pip.conf
    [global]
    index-url=http://pypi.douban.com/simple/
    [install]
    trusted-host=pypi.douban.com

#建议安装在虚拟环境下,即进入虚拟环境后进行安装
#python3的命令是:pip3

3.在线安装
  pip install 模块名

4.本地安装(切换到有模块的目录下)
  pip install *

###############################################################################
列表的排序

#元组等不可以排序,因为是不可变对象
#字典也没有排序,需要转换成列表:list(adict.items())

xx.sort(key=None,reverse=False)   //一般函数用lambda

sort可以传入一个函数(即c++中的谓词), key=函数名
该函数将列表中的每一项进行处理,处理的结果作为排序的依据

###############################################################################
建表规划

1.建表需求:

姓名、性别、职位、部门、联系方式、出生日期、工资日、基本工资、奖金、实发工资

2.关系型数据库，应该尽量减少数据冗余。为了消除冗余，可以把数据放到不同的表中。

员工表：姓名、性别、职位、部门、联系方式、出生日期
工资表：姓名、工资日、基本工资、奖金、实发工资

3.关系型数据的范式

  第一范式:数据库表的每一列都是不可分割的原子数据项
    联系方式可以拆为：email / 电话号码 / 家庭住址

  第二范式:简单来说，就是需要有个主键。
    员工表需要添加员工ID作为主键
    工资表用哪个作为主键都不合适，可以单独添加一个id作为主键

  第三范式:非主属性不能依赖于其他非主属性。
    工资表中，实发工资依赖于基本工资和奖金，它不应该出现在表中，需要用的时候，通过程序临时计算。

4.最终的表:
  员工表：员工ID、姓名、性别、职位、部门ID、email、phone、出生日期
  部门表：部门ID、部门名称
  工资表：id、员工ID、工资日、基本工资、奖金

###############################################################################
PyMySQL模块

1.操作数据库的步骤
(1)建立连接:
  conn=pymysql.connect(...)
(2)创建操作数据库的游标(相当于操作文件时的文件对象)
  cursor=conn.cursor()
(3)通过游标执行sql语句
  cursor.execute("sql语句")
(4)如果涉及对数据库的修改,需要执行commit
  conn.commit()
(5)关闭游标,关闭连接
  cursor.close()
  conn.close()

###############################################################################
