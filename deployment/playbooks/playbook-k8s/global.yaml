task_id: 8

ntp:
  server:
  - ntp.ntsc.ac.cn
  - ntp1.aliyun.com
  - 210.72.145.44

timezone: Asia/Shanghai

dns:
- 114.114.114.114
- 8.8.8.8

hosts:
- ip: 127.0.0.1
  hostname:
  - localhost

#if registry is changed,you should pay attention to registry_prefix,docker.insecure-registries
registry: 3.1.4.126
registry_prefix: "{{ registry }}/"

docker:
  version: 20.10.5
  insecure-registries: ["{{ registry }}"]

kubernetes:
  version: 1.23.1
  repository: "{{ registry_prefix }}k8s.gcr.io"
  apiserver:
    control_plane:
      ip: 3.1.4.120
      port: 16443

calico:
  repository: "{{ registry }}"
  encapsulation: IPIP
  nodeAddressAutodetectionV4:
    cidrs:
    - "3.1.4.0/24"

nginx:
  image: "{{ registry_prefix }}nginx:latest"

keepalived:
  id: 120
  vip: "{{ kubernetes.apiserver.control_plane.ip }}"
  check_script: check_nginx.sh
  image: "{{ registry_prefix }}osixia/keepalived:latest"


#nfs config
nfs:
  server: ""
  path: ""
  image: "{{ registry_prefix }}nfs-server-alpine:12"


#basic service
metrics_server:
  repository: "{{ registry_prefix }}k8s.gcr.io/metrics-server/metrics-server"

nginx_ingress:
  controller:
    repository: "{{ registry_prefix }}k8s.gcr.io/nginx-ingress-controller/controller"
  defaultBackend:
    repository: "{{ registry_prefix }}k8s.gcr.io/defaultbackend-amd64"

cert_manager:
  cainjector:
    repository: "{{ registry_prefix }}quay.io/jetstack/cert-manager-cainjector"
  controller:
    repository: "{{ registry_prefix }}quay.io/jetstack/cert-manager-controller"
  webhook:
    repository: "{{ registry_prefix }}quay.io/jetstack/cert-manager-webhook"

nfs_provisioner:
  repository: "{{ registry_prefix }}nfs-client-provisioner"


#create storageClass
storage_class:
  tidb:
    pd: tidb-pd
    tikv: tidb-tikv
  prometheus: nfs-client


tidb:
  operator:
    image: "{{ registry_prefix }}tidb-operator:v1.1.10"
    scheduler_repository: "{{ registry_prefix }}kube-scheduler"
  discovery:
    image: "{{ registry_prefix }}tidb-operator:v1.1.10"
  pd:
    image: "{{ registry_prefix }}pd:v4.0.10"
    storage_class: "{{ storage_class.tidb.pd }}"
  tikv:
    image: "{{ registry_prefix }}tikv:v4.0.10"
    storage_class: "{{ storage_class.tidb.tikv }}"
  tidb:
    image: "{{ registry_prefix }}tidb:v4.0.10"
  busybox:
    image: "{{ registry_prefix }}busybox:1.31.1"
  mysql_client:
    image: "{{ registry_prefix }}mysqlclient:v1.4.6"
  root_password: cangoal
  node_port: 14000

mysql:
  repository: "{{ registry_prefix }}mysql"
  root_password: cangoal
  node_port: 13306
  storage_class: nfs-client


kafka:
  repository: "{{ registry_prefix }}kafka"
  zookeeper:
    repository: "{{ registry_prefix }}zookeeper"
  replicas: 1
  ip: "{{ keepalived.vip }}"
  node_port: [19092]

redis:
  repository: "{{ registry_prefix }}redis"
  password: cangoal

prometheus:
  alertmanager:
    repository: "{{ registry_prefix }}alertmanager"
  configmapReload:
    repository: "{{ registry_prefix }}configmap-reload"
  nodeExporter:
    repository: "{{ registry_prefix }}node-exporter"
  pushgateway:
    repository: "{{ registry_prefix }}pushgateway"
  repository: "{{ registry_prefix }}prometheus"
  storage_class: "{{ storage_class.prometheus }}"

aiops:
  database: aiops_dev
