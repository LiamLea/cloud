task_id: 8

ntp:
  server:
  - ntp.ntsc.ac.cn
  - ntp1.aliyun.com
  - 210.72.145.44

timezone: Asia/Shanghai

dns:
- 114.114.114.114
- 8.8.8.8

hosts:
- ip: 127.0.0.1
  hostname:
  - localhost

#if registry is changed,you should pay attention to registry_prefix
registry: "10.10.10.250"
#when registry is empty, this should be empty too
#must end with / or be empty
registry_prefix: "{{ registry }}/library/"

docker:
  version: 20.10.5
  containerd:
    sandbox_image: "{{ registry_prefix }}k8s.gcr.io/pause:3.6"
  insecure-registries: ["{{ registry }}"]
  registry-mirrors: []
  http_proxy:
    enabled: True
    server: http://10.10.10.250:8123
    #must include service and pod network: 10.0.0.0/8
    no_proxy: ["{{ registry }}", "10.0.0.0/8", "quay.io", "docker.com", "docker.io", "localhost", "127.0.0.1", "aliyuncs.com", "myhuaweicloud.com"]

kubernetes:
  version: 1.22.10
  repository: "{{ registry_prefix }}k8s.gcr.io"
  apiserver:
    control_plane:
      ip: 10.172.1.10
      port: 16443
    network:
      service_subnet: 10.96.0.0/12
      pod_subnet: 10.244.0.0/16
    nodeport_range: 10000-65535

calico:
  repository: "{{ registry_prefix }}"
  encapsulation: IPIP
  nodeAddressAutodetectionV4:
    cidrs:
    - "10.172.1.0/24"

nginx:
  image: "{{ registry_prefix }}nginx:latest"
  health_check:
    port: 16442

keepalived:
  id: 120
  vip: "{{ kubernetes.apiserver.control_plane.ip }}"
  health_check:
    url: "http://127.0.0.1:{{ nginx.health_check.port }}/"
  image: "{{ registry_prefix }}osixia/keepalived:latest"

chart:
  repo:
    prometheus-community: https://prometheus-community.github.io/helm-charts
    grafana: https://grafana.github.io/helm-charts
    elastic: https://helm.elastic.co
    bitnami: https://charts.bitnami.com/bitnami

  #if the charts are local, set local directory
  #or will use the remote repo
  local_dir: ""

monitor:
  namespace: monitor
  repository: "{{ registry_prefix }}"
  #use default sc when set null
  storage_class: null
  prometheus:
    name: prometheus
    chart:
      #the path is relative path
      path: "prometheus"
      version: "15.8.5"
    config:
      #this url will send with alerting msg which user can click to access prometheus to get alerting details
      #  e.g. https://k8s.my.local:30443/prometheus
      #set /prometheus if you don't know the exact external_url or you can't access prometheus
      external_url: "/prometheus"
      # e.g. {send_resolved: true, url: "<url|no empty>"}
      webhook_configs: []
      scrape_interval: "1m"
      icmp_probe: []
      tcp_probe: []
      http_probe: []
      node_exporter: []
    blackbox:
      name: "blackbox-exporter"
      chart:
        path: "prometheus-blackbox-exporter"
        version: "5.7.0"
    adapter:
      name: "prometheus-adapter"
      chart:
        path: "prometheus-adapter"
        version: "3.2.2"
    grafana:
      name: "grafana"
      chart:
        path: "grafana"
        version: "6.28.0"
      dashboards:
        default:
          node-exporter:
            gnetId: 8919
            revision: 24
            datasource: Prometheus
          blackbox-exporter:
            gnetId: 7587
            revision: 3
            datasource: Prometheus
          #you may need to add a variable represents datasource or this dashboard would go wrong
          k8s:
            gnetId: 15520
            revision: 1
            datasource: Prometheus
  node_exporter:
    version: 1.3.0
    local_dir: "/root/ansible/files/node_exporter"
    install_path: /usr/local/bin/
    port: 9100

log:
  namespace: log
  repository: "{{ registry_prefix }}"
  #use default sc when set null
  storage_class: null
  kafka:
    #if false, must set bootstrap_servers to use the existing kafka
    enabled: true
    bootstrap_servers: []
    #install new kafka
    name: kafka
    namespace: middleware-public
    chart:
      path: "kafka"
      version: "16.2.10"
    replicas: 3
    node_ports: [19092, 19093, 19094]
    #if empty work_master ip will be used
    domain: ""

  elastic:
    version: "7.17.3"
    elasticsearch:
      name: elasticsearch
      chart:
        #the path is relative path
        path: "elasticsearch"
      resources:
        requests:
          cpu: "8000m"
          memory: "16Gi"
        limits:
          cpu: "8000m"
          memory: "16Gi"
        storage: 30Gi
        #jvm heap best practice（half of the total memory and less than 30G）
        esJavaOpts: "-Xmx8g -Xms8g"
    kibana:
      name: kibana
      chart:
        path: "kibana"
    logstash:
      name: logstash
      chart:
        path: "logstash"
      replicas: "3"
      resources:
        requests:
          cpu: "100m"
          memory: "1536Mi"
        limits:
          cpu: "1000m"
          memory: "1536Mi"
        logstashJavaOpts: "-Xmx1g -Xms1g"
      config:
        batch_size: 1000
        group_id: logstash_log_k8s
    filebeat:
      name: filebeat
      chart:
        path: "filebeat"
