###############################################################################
命令补充

rsync注意事项,原路径后面有没有"/"很重要
              没有"/",表示同步文件夹过去
              有"/",表示同步文件夹的内容过去

nc 选项 ip地址 port端口    
  选项: -u,使用udp协议
        -l,作为监听
        默认使用的协议是tcp
  比如:
    nc -l 192.168.1.1 2000   //本机ip为192.168.1.1
    nc 192.168.1.1 2000      //用另一台主机连接,就可以进行通信

秘钥注意:私钥的权限必须是600,否则无法使用

wait等待后台正在运行的进程执行结束

###############################################################################
http协议

http协议是无状态的,为了追踪用户的身份和访问记录,就有了cookie和session

HTTP/1.1协议开始,使用MIME标准,不仅仅可以输出文本文件,还有其他的文件类型
MIME:multipurpose internet mail extensions,定义了多种文件类型

一个页面一般包含多个资源,每个资源都需要单独的请求

一次完整的http请求过程:
  建立或处理连接
  接受请求
  处理请求(对请求报文进行解析)
  访问资源
  构建响应报文
  发送响应报文
  记录日志

请求报文的格式:
  请求方法  URI   协议/版本
  请求报头(name:value)     
  请求正文

响应报文的格式:
  协议/版本   响应码    原因(为什么是这个响应码)
  响应报头(name:value)
  响应正文

常用方法:
  GET - 从指定的资源请求数据
  POST - 提交表单
  PUT - 操作是幂等的,所谓幂等是指不管进行多少次操作，结果都一样
#PUT是上传一个资源,用的少,不安全

并发访问的响应模型:
  单进程IO模型
  多进程IO模型
  复用的IO模型:一个进程响应n个请求
    多线程:一个进程生成n个线程,一个线程处理一个请求
    事件驱动:一个进程直接处理多个请求,当有事件进行触发时执行,如果io阻塞,则执行其他任务
  复用的多进程IO模型:启动m个进程,每个进程生成n个线程(nginx就是此方式,而且利用了事件驱动)

###############################################################################
设备文件

字符设备:无缓存只能顺序存储
块设备:有缓存且可以随机存取

主设备号表示设备的类型
次设备号表示具体哪个设备
利用ls -l可以查看,显示大小的地方即显示主设备号和次设备号
利用cat /pro/devices 可以查看已加载的设备驱动的主设备号

两种分区方式:
msdoc:  微软磁盘系统,   只有有3个主分区,  启动扇区为MBR
gpt:    GUID 分区表,    全是主分区,       启动扇区为LBA0

###############################################################################
