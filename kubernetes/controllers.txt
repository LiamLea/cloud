###############################################################################
statefulSet（是控制器）

pod必须是有序的
pod名称必须稳定、持久、有效、唯一
重新创建pod，创建顺序是一定的，绑定的volume也是对应的
所以这是有状态的pod

1.三个组件：
  headless service
  StatefulSet
  volumeClaimTemplate			//每个pod使用不同的存储卷
  
2.由statefulSet生成的pod的名字：
  statefulSet的名字-数字

3.修改更新策略：
  spec.updateStrategy.rollingUpdate.partition: N
#N默认等于0，即更新所有
#当pod的数字>=N时才会被更新，从而可以控制更新测试

###############################################################################
创建statefulSet控制器

apiVersion: v1
kind: Service
metadata:
  name: xx
  labels:
    xx: xx
spec:
  ports:
  - port: 80
    name: xx			//标记该端口
  clusterIP: Node		//设置成无头的service
  selector:
    xx: xx				//通过标签关联pod
	
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: xx
spec:
  serviceName: xx
  replicas: xx
  selector:
    matchLabels:
	  xx: xx			//通过标签关联pod，需要和无头的service设置成一样，因为他们需要关联相同的pod
  template:
    metedata:
	  labels:
	    xx: xx			//给创建的pod打上标签，需要与上面设置的一样
	spec:
	  containers:
	  - name: xx
	    images: xx
		ports:
		- containerPort: xx			//声明要暴露的端口
		  name: xx
		volumeMounts:
		- name: xx					//volume的名字
		  mountPath: xx
  volumeClainTemplates:
  - metadata:
      name: xx					//创建的volume的名字
	spec:
	  accessModes: ["RWO"]
	  resources:
	    requests:
		  storage: 2Gi			//设置pv需要满足2Gi的条件（i代表按1024计算）

###############################################################################