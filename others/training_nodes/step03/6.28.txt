###############################################################################
Zabbix报警机制
  自定义的监控项需要配置触发器与报警动作才能实现自动报警

触发器:
  表达式,如内存不足300M
  当触发条件发生后,会导致一个触发事件
  触发事件会执行某个动作

触发器表达式:{主机:key.函数(参数)}表达式
函数参数time_shift(时间偏移):
  sum(600)  //600秒内所有值的和
  sum(#5)   //最后5个值的总和
  last(20)  //最后20秒的值
  last(#5)  //倒数第5个值
  avg(1h,1d)  //一天前的1小时的平均值

1.创建triggle
  Configure -> Templates -> Triggle -> Create Triggle

2.设置邮件
  Administration -> Media types -> 选择通知方式
  Administration -> Users

3.创建Action

###############################################################################
Zabbix进阶操作

一.自动发现
1.创建自动发现规则
  Configure -> Discovery -> Create discovery rule
2.创建动作
  Configuration -> Actions -> Discovery create action -> Actions,Operations

二,主动监控
#主动和被动是相对于 被监控端 而言的
#被动监控:server向agent发起连接,发送监控key,agent接受请求
#主动监控:agent向server发起连接,agent请求需要检测的监控项目列表
          server响应agent发送一个items列表,agent确认收到监控列表
          TCP连接完成,会话关闭,agent开始周期性收集数据

1.被监控端 上安装zabbix_agentd服务
    ./configure --enable-agent

2.被监控端 修改配置文件:/usr/local/etc/zabbix_agentd.conf
    #Server=xx       //主动模式不需要设置
    StartAgents=0    //禁止被动监控,设置后有服务没端口
    ServerActive=xx  //监控服务器ip,之后要主动连这个IP,所以要取消127.0.0.1
    Hostname=xx      //一定要和zabbix服务配置的监控主机名称一致
    RefreshActiveChecks=120    //默认120秒检测一次

3.监控端 克隆一个模板
    Configure -> Templates -> 点开要克隆的模板 -> full clone

4.修改监控项模式
    相应模板的items -> 选择全部item -> Mass update -> type,Zabbix agent(active)
 
5.添加监控主机
  Configure -> Hosts -> create host -> Host name:必须与被监控主机设置的一样,ip:0.0.0.0,port:0 -> Templates(添加设置成active的模板)

三.添加图形
  1.拓扑图
      Monitoring -> Maps -> create map -> constructor

  2.聚合图(一个页面上显示多个图表)
      Monitoring -> Screens -> create screen -> constructor -> change

###############################################################################
监控案例

一.监控nginx状态
  1.部署好nginx
  2.自定义key
    UserParameter=nginx.status[*],/root/nginx_status.sh $1
//$1匹配前面的*,即前面*是什么,传递给脚本的参数就是什么,*是监控端定义的
  3.编写脚本:/root/nginx_status.sh
  4.赋予脚本执行权限
  5.重启zabbix_agenntd服务
  6.测试
      zabbix_get -s 127.0.0.1 -k nginx.status[accepts]
  7.在监控页面进行配置

二.监控网络连接状态

1.TCP连接状态
  SYN_SENT:发起了连接请求
  ESTABLISHED:建立了连接
  SYN_RCVD:接收到了SYN

  FIN_WAIT1:发送fin请求后,等待对方的FIN,如果对方只回复ACK,则进入FIN_WAIT2状态
  FIN_WAIT2:在接受到ACK后,等待对方的FIN
  TIME_WAIT:等待2*MSL(max segment lifetime)时间即变为CLOSED状态
  CLOSE_WAIT:等待关闭,即对方发送FIN过来,回复了ACK,等待自己这边处理完,发送FIN过去
  LAST_ACK:等待最后一个ACK,即完成断开连接

###############################################################################
