###############################################################################

1.挂载raw格式镜像(用下面方法挂载即可)
(1)创建一个镜像文件
  用dd或qemu-img
(2)与回环设备关联   //回环设备可以将文件当块设备使用
  losetup -f                //查看空闲的回环设备
  losetup /dev/loopn 文件   //将文件与回环设备关联 
(3)进行分区和格式化
  fdisk /dev/loopn
  mkfs.xfs /dev/loopn
(4)根据分区表，创建设备映射
  kpartx -av /dev/loopn
(5)挂载
  mount /dev/mapper/xx 挂载点
 
2.挂载所有类型的镜像
  guestmount -a 镜像名 -m 分区 挂载点   
#m:mount,当不知道有什么分区时，随便写，错误之后会提示
#-i:inspect,会自动检测操作系统

###############################################################################
html

1.基本术语
  元素      //即被标签包围的内容
  属性      //用来修饰元素，属性的声明必须在开始标签内，属性的值包含在引号内
  标准属性  //绝大多数元素都有的属性，如：id,title,class,style
  注释      //<!--注释部分-->

2.按是否闭合分类：
  单标签，如:<br>
  双标签，如:<h1>xxx<h1>
      
3.根据位置特性：
  块级元素(block)           //独占一行，可以设置宽高，内外边距
  行级元素(inline)          //与其他行级元素共处一行，不可设置宽高，内外边距
  行内块元素(inline-block)  //与其他行内元素共处一行，可以设置宽高，内外边距
                            //<b>xx</b>     bold,加粗
                            //<i>xx</i>     italic,斜体字
                            //<u>xx</u>     underline,下划线

4.html文件结构
  <!DOCTYPE html>       //文件类型声明
  <html>
    <head></head>         //文件头,用于定义全局信息,如:title,meta
    <body></body>         //文件主体
  </html>

5.快速生成标签
  h1*3        //生成3个h1标签
  h1*3>p*2    //生成3个h1标签，并在每个h1标记内生成2个p标签

###############################################################################
相关标签

1.<meta xx>     //设置元信息

2.<hr>          //horizon,设置水平线

3.<br>          //break,换行

4.<h1></h1>     //headline,一级标题(一共到h6)

5.<p></p>       //paragraph,段落,可以在里面插入各种子标签

6.<div></div>   //division,分区,很重要，利用div对页面进行划分
                //将整个页面划分为一个div,然后再在这个div中划分多个div

7.<a href="xx" target="_blank"> </a>    
#anchor,锚点,hyertext reference,超连接
#href可以链接到另一个网页
#也可以链接到本网页的另一个标签的位置，href="#id名字"
#href="#"，链接到本网页的顶部
#target="_blank",表示用新的页面打开超链接

8.<sup></sup>   //superscript,上标
  <sub></sub>   //subscript,下标

9.<span></span>   //span,范围,表示文本段

10.<img src="xx" alt="xx"></img>    //alter,替代,当图片不能显示时，用该文字替代

11.<table>            
      <thead>             //table head
        <tr></tr>
      <thead>
      <tr>                //table row
        <td></td>         //table data cell,表中的一个单元格
        ...
      </tr>
      ...
   </table>

12.<ul>                 //unordered list
      <li></li>         //line
      ...
   </ul>

13.<ol>                 //ordered list，属性type可以指定以什么形式编号
      <li></li>         //line
      ...
   </ol>

14.相关符号
  &lt;          //<
  &gt;          //>
  &nbsp;        //none break apace,表示一个空格
  &copy;        //版权标记符
  &yen;         //人名币符号

###############################################################################
form表单及控件

form表单的作用:用于显示，收集信息，并提交信息到服务器

1.主要属性：
  action      //定义表单被提交时发生的动作，通常包含服务方的URL
  method      //指出表单的提交方式(get或post)
  enctype     //数据表单的编码方式
  name        //表单名称

2.表单控件
  input       //type：text,password,submit,reset,radio,checkout,
              //type: button(用于执行脚本)
              //type: hidden(表单中包含用户看不见的信息）
              //type: file(本件选择框，用于从本机选取文件)
              //name,控件的名称
              //value,控件的数据
              //则表单传递的数据包含：name=value
  textarea
  select      //option设置每个选择的内容
  label       //用于列出提示信息，利用for与某个控件关联
  
###############################################################################
CSS(cascading style sheet) 实现内容和样式的分离

1.格式：
<style>

  标签名{         //为某一类标签定义统一的样式，如body,h1等
    ...
  }

  #标签的id名{    //为某一个标签定义样式，#必须要加，指明后面是id名字
    ...
  }
  
</style>

2.使用方式
  内联方式        //定义在单个的html元素中，如<h1 style="..."></h1>
  内部样式表      //在head元素中添加style元素
  外部样式表      //创建一个css文件，该文件只包含样式规则
                  //在html文件中，使用link元素连接样式表
                  //<link rel="stylesheet" href="css表名">

###############################################################################
