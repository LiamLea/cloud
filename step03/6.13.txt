###############################################################################
用户授权

一.授权
1.命令格式
  grant 权限列表 on 库.表 to 用户名@"客户端地址"
  identified by "密码"
  with grant option;     //有授权权限

2.权限列表:
  usage                  //代表无权限
  权限(字段1,字段2,...)  //指定对某个字段的权限
3.客户端地址:
  %             //所有主机
  192.168.4.%   //某个网段

4.相关命令
  show grants;                //显示自身权限
  show grants for 用户名@"客户端地址";   //管理员查看已授权的用户权限
  set password=password("密码");   //修改自身密码
  set password for 用户名@"客户端地址"=password("密码");  //管理员设置用户密码
  drop user 用户名@"客户端地址"

5.授权库:mysql,记录了授权信息
  user表          //记录授权用户及对整个数据库的权限
  db表            //记录授权用户对数据库的访问权限
  tables_priv表   //记录授权用户对表的访问权限
  columns_priv表  //记录授权用户对字段的访问权限
#可以通过修改表的值进行权限的修改(最后flush privileges即可)

二.撤销权限
1.命令格式
  revoke 权限列表 on 库.表 from 用户名@"客户端地址";
#all不包括grant option
2.撤销授权权限
  revoke grant option ...

###############################################################################
root密码

一.恢复root密码(不知道密码)
  1.停止mysql服务
  2.修改配置文件(跳过授权表启动mysql服务)
    [mysqld]
    skip-grant-tables
#关于密码的设置要注释掉
  3.修改密码
    update mysql.user set authentication_string=password("密码") 
    where user="root" and host="localhost";
    flush privileges;

二.重置root密码
  mysqladmin -uroot -p password "新密码"

###############################################################################
备份

备份方式:
  物理备份:复制数据的内容,如拷贝或打包
  逻辑备份:记录产生数据的命令,然后利用这些命令恢复出数据

备份策略:
  完全备份
  增量备份:备份 上次备份后,所有变化的数据
  差异备份:备份 完全备份后,所有变化的数据

一.完全备份
1.备份:
  mysqldump -uroot -p密码 库 [表] > 目录/xx.sql
#库: -A或--all-databases  //所有库
     -B 库1 库2,...       //多个库备份成一个文件
2.恢复
  mysql -uroot -p密码 [库] < 目录/xx.sql
#恢复单个库或库中的某些表,必须指定库名
#当恢复多个库时,不能输入库名,如果输入对应的库名,只恢复相应库的内容,如果不对应就不恢复
#不会删除该库多余的内容

二.binlog日志

1.binlog日志
  也称为 二进制日志
  记录除查询之外的SQL命令
  配置mysql主从同步的必要条件

2.启动binlog日志
  [mysqld]
  log-bin[=目录/文件名]    //启动binlog日志,默认放在/var/lib/mysql目录下
                           //可以自定义binlog日志,但需要改变目录的所属
  server_id=100   //指定id值(1-255),随便写,不能重复
  max_binlog_size=数字m    //指定日志文件容量,默认1G,超过此容量会产生新的文件

3.手动生成新的binlog文件(即不等超过文件容量)
  第一种方法:重启mysqld服务    //第一种不建议采用
  第二种方法:flush logs;
  第三种方法:mysqldump ... --flush-logs > xx.sql  //备份的时候

4.binlog相关命令
  show master status;                    //显示binlog日志状态
  purge master logs to "xx-bin.000004";  //删除指定编号之前的日志
  reset master;                          //删除所有binlog日志,重新创建

5.恢复数据
  mysqlbinlog 日志文件 | mysql -uroot -p密码

三.分析日志

1.查看日志的记录格式
  show variables like "binlog_format";
#三种记录格式:statement(报表模式),row(行模式),mixed(混合模式)

2.修改日志的记录格式
  [mysqld]
  binlog_format="mixed"

3.查看日志
  #偏移量
  #时间点

4.查看指定范围内的数据  //恢复只要管道给mysql命令
  mysqlbinlog [选项] 日志文件
选项:
    --start-datetime="yyyy-mm-dd hh:mm:ss"
    --stop-datetime="yyyy-mm-dd hh:mm:ss"
    --start-position=数字          //通常采用偏移量的方式
    --stop-position=数字

###############################################################################
