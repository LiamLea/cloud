###############################################################################
单词积累
  xtra 外加功能工具

###############################################################################
mysql常用备份工具
  物理备份缺点:跨平台性差,时间长,冗余
  mysqldump备份缺点:效率低,锁表
  xtrabackup优点:不锁表  //软件:percona
                         //组件:xtrabackup
                                innobackupex

###############################################################################
innobackupex命令(表的存储引擎为innodb,才能增量备份)

基础命令:
  show create table 表;   //查看表所使用的存储引擎
  show engins;          //查看数据库支持的存储引擎

常用选项
  --host
  --user
  --password
  --port
  --databases        //--databases="库1 库2 ..."
  --no-timestamp    //不用当前日期创建一个子目录 存放备份文件
  --redo-only       //日志合并
  --apply-log       //准备恢复数据
  --copy-back       //拷贝数据
  --incremental 目录名  //增量备份
  --incremental-basedir=目录名   //增量备份时,指定上一次备份数据存储的目录
  --incremental-dir=目录         //准备恢复数据时,指定增量备份数据存储的目录
  --export           //导出表信息
  import            //导入表空间

查看备份信息:
  cat 目录/xtrabackup_checkpoints
#backup_type = 类型  //有备份类型和恢复类型    
#from_lsn = 备份起始点
#to_lsn = 备份终止点

1.完全备份
  innobackupex --user 用户名 --password 密码 目录 --no-timestamp
2.完全备份恢复
#停止mysql服务
  rm -rf /var/lib/mysql/*            //恢复时要求mysql目录为空
  innobackupex --apply-log 目录    //准备恢复数据(利用的是日志文件)
  innobackupex --copy-back 目录    //恢复数据
  chown -R mysql:mysql /var/lib/mysql

3.恢复单个表
#一个表有两个相关文件:xx.ibd   //表空间文件
#                     xx.frm   //表结构文件
  删除表空间:
    alter table 表 discard tablespace;  //会删除相应的xx.ibd文件
  导出表信息:
    innobackupex --apply-log --export 备份目录
  拷贝特定表信息文件到数据库目录下:
    xx.cfg xx.exp xx.ibd xx.frm   //若要恢复到的表结构存在,则不需要拷贝xx.frm
  修改所属
  导入新的表空间:
    alter table 表 import tablespace;
  删除表信息文件
    xx.cfg xx.exp

4.增量备份
  innobackupex --user 用户名 --password 密码 --incremental 增量目录 --incremental-basedir=目录 --no-timestamp
5.增量恢复
  innobackupex --apply-log --redo-only 目录名 --incremental-dir=目录名  //准备恢复数据
  innobackupex --copy-back 目录名  //恢复数据

###############################################################################
