###############################################################################
约束条件:
  Null      //是否允许为空,默认允许为空
  Key       //键值
  Default   //默认值
  Extra     //额外设置,比如:自增长

键值类型:
  index        //普通索引
  unique       //唯一索引
  fulltext     //全局索引
  primary key  //主键
  foreign key  //外键

###############################################################################
修改表结构

  alter table 表 执行动作;

    执行动作:add       //first,表示添加在最前面
                       //after 字段名,表示在某个字段的后面
             drop
             modify   //修改字段类型,约束条件,字段位置(first,after)
                      //若要修改的类型与已存储的数据冲突时,不允许修改
             change   //修改字段名,也必须指定字段类型等
             rename   //修改表名

相关例子:
1.添加字段
  alter table t1 add age char(5) first;
2.删除字段
  alter table t1 drop age,drop name;

###############################################################################
普通索引(字段标志:MUL)

对表中字段值进行排序(对显示没有影响,只是对查询等性能产生影响)
索引类型:Btree,B+tree,hash
优点:加快查询速度
缺点:索引需要占用物理空间
     当数据改动时,索引需要动态调整,降低了数据的维护速度
应用场景:当查询操作远远大于写操作,使用索引
使用规则:一个表中可以有多个index字段
         字段的值允许重复,且可以赋NULL值

索引操作:
  查看索引信息
    show index from 表\G;   //\G表示纵向显示
  建表时创建
    index(字段名)
  在已有表上创建
    create index 索引名 on 表(字段名)
  删除索引
    drop index 索引名 on 表

###############################################################################
主键(Primary Key)(字段标志:PRI)

使用规则:
  字段值不能重复,且不为NULL
  一个表中只能有一个Primary Key
  多个字段都作为主键,称为复合主键,必须一起创建

主键操作:
  建表时创建
    primary key(字段名)
  在已有表上创建
    alter table 表 add primary key(字段名)
  删除主键(要先去除自增长)
    alter table 表 drop primary key
  建表时创建复合主键
    primary key(字段名,字段名,...)
  auto_increment在主键的基础上才能使用
    //当删除表中的记录,再次插入在原有的基础上继续自增

###############################################################################
外键(foreign key)(字段标志:MUL)

插入记录时,字段值在另一个表字段值的范围内选择(包括NULL)
使用规则:
  两张表存储引擎必须是innodb
  字段类型要一致
  被参考的字段必须是键值类型的一种,通常是主键

外键操作:

  建表时创建
    create table 表(
      ...
      foreign key(字段名) references 表(字段名)    //指定外键
      on update cascade       //同步更新
      on delete cascade       //同步删除
    )engine=innodb;

  设置了外键的字段也可以设置主键

  删除外键
    alter table 表 drop foreign key 外键名    //外键名需要查出来,不是字段名

###############################################################################
